# Generated by Django 4.1.4 on 2023-03-12 18:28

import dashboard_users.validators
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с данным именем уже существует.'}, max_length=32, unique=True, validators=[dashboard_users.validators.ASCIIUsernameValidator()], verbose_name='Имя пользователя')),
                ('first_name', models.CharField(error_messages={'required': 'Обязательное поле.'}, max_length=64, validators=[dashboard_users.validators.FirstLastNameValidator()], verbose_name='Имя:')),
                ('last_name', models.CharField(error_messages={'required': 'Обязательное поле.'}, max_length=64, validators=[dashboard_users.validators.FirstLastNameValidator()], verbose_name='Фамилия:')),
                ('email', models.EmailField(max_length=64, unique=True, validators=[dashboard_users.validators.EmailValidator()], verbose_name='Email:')),
                ('password', models.CharField(max_length=255, verbose_name='Пароль:')),
                ('is_active', models.BooleanField(default=True, help_text='Является ли пользователь активным?', verbose_name='ACTIVE')),
                ('is_superuser', models.BooleanField(default=False, help_text='Является ли пользователь администратором?', verbose_name='ROOT')),
                ('is_staff', models.BooleanField(default=False, help_text='Имеет ли право пользователь заходить в панель администратора?', verbose_name='STAFF')),
                ('groups', models.ManyToManyField(blank=True, to='auth.group', verbose_name='Группы')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
