from common.mixins import AppVersionMixin, ErrorMessageMixin
from dashboard_users.forms import LoginForm, NewUserForm
from dashboard_users.models import CustomUser
from django.conf import settings
from django.contrib import messages
from django.contrib.auth import logout
from django.contrib.auth.hashers import check_password
from django.contrib.auth.views import LoginView
from django.contrib.messages.views import SuccessMessageMixin
from django.shortcuts import redirect
from django.urls import reverse_lazy
from django.views.generic import CreateView


# Create your views here.
class RegisterView(SuccessMessageMixin, ErrorMessageMixin, AppVersionMixin, CreateView):
    model = CustomUser
    form_class = NewUserForm
    template_name = "dashboard_users/auth/_register.html"
    success_message = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
    success_url = reverse_lazy("dashboard_users:login")
    error_message = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –Ω–µ—É–¥–∞—á–Ω–æ. –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è."


class UserLoginView(AppVersionMixin, LoginView):
    form_class = LoginForm
    template_name = "dashboard_users/auth/_login.html"
    success_url = reverse_lazy("dashboard:targets")

    def form_valid(self, form):
        messages.info(self.request, f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ {form.cleaned_data.get('username')}.")
        return super().form_valid(form)

    def form_invalid(self, form):
        try:
            user = CustomUser.objects.get(username=form.cleaned_data.get('username').lower())

            if user is None:
                raise CustomUser.DoesNotExist
            elif not user.is_active:
                messages.error(self.request, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –µ—â–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.')
            elif not check_password(form.cleaned_data.get('password'), user.password):
                messages.error(self.request, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω, –ª–∏–±–æ –ø–∞—Ä–æ–ª—å.')
        except CustomUser.DoesNotExist:
            messages.error(self.request, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        finally:
            return super().form_invalid(form)


def logout_view(request):
    logout(request)
    messages.info(request, "–£–¥–∞—á–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ–∑ –¥–∞—à–±–æ—Ä–¥–∞ ü§£")
    return redirect("dashboard:index")
